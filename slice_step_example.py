import numpy as np

def demonstrate_step_slicing():
    """
    演示带步长的切片操作
    切片语法: [start:end:step]
    """
    # 创建一个8x8的零矩阵
    a = np.zeros((8, 8), dtype=int)
    
    print("原始矩阵（全0）:")
    print(a)
    
    # 第一个操作：a[1::2, ::2] = 1
    # 这表示：
    # - 行：从索引1开始，每隔2行选择一行
    # - 列：从开始到结束，每隔2列选择一列
    a[1::2, ::2] = 1
    print("\n执行 a[1::2, ::2] = 1 后:")
    print(a)
    print("\n解释第一个操作:")
    print("a[1::2, ::2] = 1 表示:")
    print("- 行：从第2行开始(索引1)，每隔一行")
    print("- 列：从第1列开始(索引0)，每隔一列")
    
    # 第二个操作：a[::2, 1::2] = 1
    # 这表示：
    # - 行：从开始到结束，每隔2行选择一行
    # - 列：从索引1开始，每隔2列选择一列
    a[::2, 1::2] = 1
    print("\n再执行 a[::2, 1::2] = 1 后:")
    print(a)
    print("\n解释第二个操作:")
    print("a[::2, 1::2] = 1 表示:")
    print("- 行：从第1行开始(索引0)，每隔一行")
    print("- 列：从第2列开始(索引1)，每隔一列")
    
    print("\n最终效果：")
    print("这两个操作组合在一起创建了一个棋盘格式的图案")
    print("1和0交替出现，形成了一个规则的模式")

if __name__ == "__main__":
    demonstrate_step_slicing() 